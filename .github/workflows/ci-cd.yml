name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: cognitivemesh/reitorly

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Docker Compose Lint
        uses: docker/compose-linter-action@v1
        with:
          docker_compose_file: docker-compose.yml

      - name: Run Tests
        run: |
          docker-compose run --rm reitorly pytest

      - name: Notify Success
        if: success()
        run: echo "CI/CD Pipeline completed successfully."

      - name: Notify Failure
        if: failure()
        run: echo "CI/CD Pipeline failed."

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        run: |
          ssh user@your_server_ip 'cd /path/to/your/app && docker-compose pull && docker-compose up -d'

      - name: Notify Deployment
        if: success()
        run: echo "Deployment completed successfully."

      - name: Notify Deployment Failure
        if: failure()
        run: echo "Deployment failed."
